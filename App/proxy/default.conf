server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name  localhost;

    #security
    server_tokens off;

    #ssl path
    ssl_certificate /etc/ssl/certs/server-cert.crt;
    ssl_certificate_key /etc/ssl/certs/server-cert.key;

    #performance
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "HIGH !aNULL !eNULL !EXPORT !CAMELLIA !DES !DES !MD5 !PSK !RC4";

    # Enable HSTS - strict transport security, no load on http
    add_header Strict-Transport-Security "max-age=31536000" always;

    # SSL Sessions - configuration of ssl cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 4h;
    ssl_session_tickets on;

    access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # sendfile on;
    location /web1 {
        proxy_set_header Host $host;
        proxy_pass         http://web1:8080/;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    # sendfile on;
    location /web2 {
        proxy_set_header Host $host;
        proxy_pass         http://web2:9000/;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}